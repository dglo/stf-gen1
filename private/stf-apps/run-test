#!d:\apps\msys-1.0\bin\sh.exe

#
# include common functions, variables...
#
# qryParam
#
source /e/arthur/xml/bin/common.sh

#
# run-test [IN query string (QUERY_STRING)]
#
# 1) fname     <- get file name (mk-name)
# 2) testname  <- get test name from query string
# 3) fname.xml <- create xml file from query string
# 4) run test [ stf -send fname -go testname -rcv testname fname-results]
# 5) update summary file (database) [use:
#     `show-time` `-Xalan fname-results restosum.xsl` fname >> summary-file]
# 6) format results as html [Xalan fname-results.xml restohtml.html]
#
echo "Content-type: text/html"
echo

#
# 1) set fname
#
fname=`mk-name`

#
# 2) get test name from query string
#
testname=`echo $QUERY_STRING | qryParam test`

if [ ${#testname} == 0 ]; then
  echo "<h2>Error! no test specified</h2>"
  exit 0
fi

#
# make sure testname exists!
#
if [ ! -d ${xmlpath}/${testname} ]; then 
    echo "<h2>Error\!  Test ${testname} not found</h2>"
    exit 0
fi

#
# 3) create xml file from query string...
#
qxml=${fname}-qry.xml

# 
# mkTestXml testName
#
function mkTestXml() {
    echo ${QUERY_STRING} | splitParams | \
	awk -v test=$1 -f /e/arthur/xml/bin/qrytoxml.awk
}

mkTestXml `echo $QUERY_STRING | qryParam test` > \
    ${xmlpath}\\${testname}\\${qxml}

fullqxml=${xmlpath}\\${testname}\\${qxml}
fullrxml=${xmlpath}\\${testname}\\${fname}-results.xml

#
# 4) run the test
#
stf -send ${fullqxml} -go ${testname} -rcv ${testname} ${fullrxml}

#
# 5) update summary files
#   a) summary
#   b) tests
#   c) boards
#
fullsxsl=${xmlpath}\\restosum.xsl
echo `prtTime` `Xalan ${fullrxml} ${fullsxsl}` ${fname} >> ${xmlpath}\\summary
awk '{print $2 }' /e/arthur/xml/summary | sort | uniq > /e/arthur/xml/tests
awk '{print $3 }' /e/arthur/xml/summary | sort | uniq > /e/arthur/xml/boards

#
# 6) display results...
#
Xalan ${fullrxml} ${xmlpath}\\restohtml.xsl
